package example.swing.components.main;

import example.engine.model.Player;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.Collection;
import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author Iblecher
 */
public class BoardPanel extends javax.swing.JPanel {

    /**
     * Creates new form BoardPanel
     */
    public BoardPanel() {
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new JPanel();
        rightPanel = new JPanel();
        leftPanel = new JPanel();

        setLayout(new BorderLayout());

        topPanel.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        topPanel.setMaximumSize(new Dimension(32767, 100));
        topPanel.setMinimumSize(new Dimension(12, 100));
        add(topPanel, BorderLayout.PAGE_START);

        rightPanel.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        rightPanel.setMaximumSize(new Dimension(100, 32767));
        rightPanel.setMinimumSize(new Dimension(100, 12));
        add(rightPanel, BorderLayout.LINE_END);

        leftPanel.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        leftPanel.setMaximumSize(new Dimension(100, 32767));
        leftPanel.setMinimumSize(new Dimension(100, 12));
        add(leftPanel, BorderLayout.LINE_START);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel leftPanel;
    private JPanel rightPanel;
    private JPanel topPanel;
    // End of variables declaration//GEN-END:variables

    public void setPlayers(Collection<Player> players) {
	JPanel currentPanel = leftPanel;
	for (Player player : players) {
	    currentPanel.add(createPlayerComponent(player));
	    if (currentPanel == leftPanel) {
		currentPanel = topPanel;
	    } else if (currentPanel == topPanel){
		currentPanel = rightPanel;
	    } else if (currentPanel == rightPanel) {
		currentPanel = leftPanel;
	    }
	}
    }

    private JComponent createPlayerComponent(Player player) {
	JLabel label = new JLabel(player.getName());
	label.setPreferredSize(new Dimension(70, 70));
	label.setBorder(BorderFactory.createEtchedBorder());
	return label;
    }
}
