/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package example;

import example.validation.Validator;
import example.validation.Validatable;
import examples.utils.ExamplesUtils;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Liron Blecher
 */
public class PlayersContainerPanel extends javax.swing.JPanel implements Validator {

    private int currentNumberOfPlayers;
    private List<Validatable> players;

    /**
     * Creates new form PlayersContainerPanel
     */
    public PlayersContainerPanel() {
        initComponents();
        players = new ArrayList<Validatable>();
    }

    private void addPlayerDetailsPanel() {
        PlayersDetailsPanel detailsPanel = new PlayersDetailsPanel();
        detailsPanel.setValidtor(this);
        players.add(detailsPanel);
        containerPanel.add(detailsPanel);
        containerPanel.validate();
    }

    @Override
    public void playerNameChanged(Validatable source) {
        //check if source name is valid
       
        //get all players names
        List<String> names = getAllPlayersNames(source);
        //get source player name
        String sourceName = source.getPlayerName();
        //check if source player name is in all players names
         boolean valid = !names.contains(sourceName);
        //if not, set source as disabled
         source.setValid(valid, "Name already exists");
    }

    private List<String> getAllPlayersNames(Validatable source) {
        List<String> names = new ArrayList<String>();
        for (Validatable player : players) {
            if (player != source) {
                names.add(player.getPlayerName());
            }
        }
        return names;
    }

    public static void main(String[] args) {
        ExamplesUtils.setNativeLookAndFeel();
        ExamplesUtils.showExample("Example", new PlayersContainerPanel());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new JPanel();
        jLabel1 = new JLabel();
        numberOfPlayersSpinner = new JSpinner();
        containerPanel = new JPanel();

        setLayout(new BorderLayout());

        jLabel1.setText("Number of Players:");

        numberOfPlayersSpinner.setModel(new SpinnerNumberModel(0, 0, 6, 1));
        numberOfPlayersSpinner.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                numberOfPlayersSpinnerStateChanged(evt);
            }
        });

        GroupLayout controlPanelLayout = new GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(numberOfPlayersSpinner, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(241, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numberOfPlayersSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(controlPanel, BorderLayout.PAGE_START);

        containerPanel.setLayout(new BoxLayout(containerPanel, BoxLayout.PAGE_AXIS));
        add(containerPanel, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void numberOfPlayersSpinnerStateChanged(ChangeEvent evt) {//GEN-FIRST:event_numberOfPlayersSpinnerStateChanged
        int newNumberOfPlayers = (Integer) numberOfPlayersSpinner.getValue();
        int delta = newNumberOfPlayers - currentNumberOfPlayers;
        if (delta > 0) {
            //add details panel
            addPlayerDetailsPanel();
        } else if (delta < 0) {
            //remove details panel
        }
        currentNumberOfPlayers = newNumberOfPlayers;
    }//GEN-LAST:event_numberOfPlayersSpinnerStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel containerPanel;
    private JPanel controlPanel;
    private JLabel jLabel1;
    private JSpinner numberOfPlayersSpinner;
    // End of variables declaration//GEN-END:variables
}
