/*
 */
package swing.playerinterface;

import engine.cards.Series;
import engine.players.Hand;
import engine.players.Player;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;

/**
 *
 * @author adamnark
 */
public class JPanelRequest extends javax.swing.JPanel {

    private Hand hand;
    private List<Series> availableSeries;
    private List<Player> otherPlayers;
    private DefaultComboBoxModel otherPlayerComboBoxModel;
    private List<JCheckBox> jCheckBoxes;
    public static final String EVENT_DONE = "JPanelRequest - done";

    /**
     * Creates new form JPanelRequest
     */
    public JPanelRequest() {
        initComponents();
        jCheckBoxes = new LinkedList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxOtherPlayers = new javax.swing.JComboBox();
        jPanelSeries = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(400, 400));
        setMinimumSize(new java.awt.Dimension(400, 400));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Make a Request");

        jLabel2.setText("Pick a player:");

        jPanelSeries.setBorder(javax.swing.BorderFactory.createTitledBorder("Pick series"));
        jPanelSeries.setMaximumSize(new java.awt.Dimension(380, 200));
        jPanelSeries.setMinimumSize(new java.awt.Dimension(380, 30));

        jButtonOk.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonOk.setText("Request!");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jButtonOk))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanelSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxOtherPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxOtherPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSeries, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOk)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        firePropertyChange(EVENT_DONE, false, true);
    }//GEN-LAST:event_jButtonOkActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;
    private javax.swing.JComboBox jComboBoxOtherPlayers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelSeries;
    // End of variables declaration//GEN-END:variables

    public void setHand(Hand hand) {
        this.hand = hand;
    }

    public void setAvailableSeries(List<Series> availableSeries) {
        this.availableSeries = availableSeries;
        initJPanelSeries();
    }

    public void setListOfPlayers(List<Player> otherPlayers) {
        this.otherPlayers = otherPlayers;
        initComboBox();
    }

    @SuppressWarnings("unchecked")
    public void initComboBox() {
        this.otherPlayerComboBoxModel = new DefaultComboBoxModel();
        for (Player player : this.otherPlayers) {
            this.otherPlayerComboBoxModel.addElement(player.getName());
        }
        this.jComboBoxOtherPlayers.setModel(this.otherPlayerComboBoxModel);
    }

    public String getSelectedPlayerName() {
        return (String) this.jComboBoxOtherPlayers.getSelectedItem();
    }

    @SuppressWarnings("unchecked")
    private void initJPanelSeries() {
        for (Series series : availableSeries) {
            JCheckBox jcb = new JCheckBox(series.getName());
            this.jCheckBoxes.add(jcb);
            this.jPanelSeries.add(jcb);
        }
        this.jPanelSeries.validate();
        this.validate();
        this.repaint();
    }

    public List<String> getSelectedSeries() {
        LinkedList<String> lst = new LinkedList<>();
        for (JCheckBox jCheckBox : this.jCheckBoxes) {
            if (jCheckBox.isSelected()) {
                lst.add(jCheckBox.getText());
            }
        }

        return lst;
    }
}
